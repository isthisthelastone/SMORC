{
  "version": 3,
  "sources": ["../../.pnpm/@react-aria+tooltip@3.7.2_react@18.2.0/node_modules/@react-aria/tooltip/dist/packages/@react-aria/tooltip/src/index.ts", "../../.pnpm/@react-aria+tooltip@3.7.2_react@18.2.0/node_modules/@react-aria/tooltip/dist/packages/@react-aria/tooltip/src/useTooltip.ts", "../../.pnpm/@react-aria+tooltip@3.7.2_react@18.2.0/node_modules/@react-aria/tooltip/dist/packages/@react-aria/tooltip/src/useTooltipTrigger.ts"],
  "sourcesContent": ["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useTooltip} from './useTooltip';\nexport {useTooltipTrigger} from './useTooltipTrigger';\nexport type {AriaTooltipProps, TooltipTriggerProps} from '@react-types/tooltip';\nexport type {TooltipAria} from './useTooltip';\nexport type {TooltipTriggerAria} from './useTooltipTrigger';\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaTooltipProps} from '@react-types/tooltip';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {TooltipTriggerState} from '@react-stately/tooltip';\nimport {useHover} from '@react-aria/interactions';\n\nexport interface TooltipAria {\n  /**\n   * Props for the tooltip element.\n   */\n  tooltipProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a Tooltip component.\n */\nexport function useTooltip(props: AriaTooltipProps, state?: TooltipTriggerState): TooltipAria {\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  let {hoverProps} = useHover({\n    onHoverStart: () => state?.open(true),\n    onHoverEnd: () => state?.close()\n  });\n\n  return {\n    tooltipProps: mergeProps(domProps, hoverProps, {\n      role: 'tooltip'\n    })\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getInteractionModality, isFocusVisible, useHover} from '@react-aria/interactions';\nimport {mergeProps, useId} from '@react-aria/utils';\nimport {RefObject, useEffect, useRef} from 'react';\nimport {TooltipTriggerProps} from '@react-types/tooltip';\nimport {TooltipTriggerState} from '@react-stately/tooltip';\nimport {useFocusable} from '@react-aria/focus';\n\nexport interface TooltipTriggerAria {\n  /**\n   * Props for the trigger element.\n   */\n  triggerProps: DOMAttributes,\n\n  /**\n   * Props for the overlay container element.\n   */\n  tooltipProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a tooltip trigger, e.g. a button\n * that shows a description when focused or hovered.\n */\nexport function useTooltipTrigger(props: TooltipTriggerProps, state: TooltipTriggerState, ref: RefObject<FocusableElement>) : TooltipTriggerAria {\n  let {\n    isDisabled,\n    trigger\n  } = props;\n\n  let tooltipId = useId();\n\n  let isHovered = useRef(false);\n  let isFocused = useRef(false);\n\n  let handleShow = () => {\n    if (isHovered.current || isFocused.current) {\n      state.open(isFocused.current);\n    }\n  };\n\n  let handleHide = (immediate?: boolean) => {\n    if (!isHovered.current && !isFocused.current) {\n      state.close(immediate);\n    }\n  };\n\n  useEffect(() => {\n    let onKeyDown = (e) => {\n      if (ref && ref.current) {\n        // Escape after clicking something can give it keyboard focus\n        // dismiss tooltip on esc key press\n        if (e.key === 'Escape') {\n          e.stopPropagation();\n          state.close(true);\n        }\n      }\n    };\n    if (state.isOpen) {\n      document.addEventListener('keydown', onKeyDown, true);\n      return () => {\n        document.removeEventListener('keydown', onKeyDown, true);\n      };\n    }\n  }, [ref, state]);\n\n  let onHoverStart = () => {\n    if (trigger === 'focus') {\n      return;\n    }\n    // In chrome, if you hover a trigger, then another element obscures it, due to keyboard\n    // interactions for example, hover will end. When hover is restored after that element disappears,\n    // focus moves on for example, then the tooltip will reopen. We check the modality to know if the hover\n    // is the result of moving the mouse.\n    if (getInteractionModality() === 'pointer') {\n      isHovered.current = true;\n    } else {\n      isHovered.current = false;\n    }\n    handleShow();\n  };\n\n  let onHoverEnd = () => {\n    if (trigger === 'focus') {\n      return;\n    }\n    // no matter how the trigger is left, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide();\n  };\n\n  let onPressStart = () => {\n    // no matter how the trigger is pressed, we should close the tooltip\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n\n  let onFocus = () => {\n    let isVisible = isFocusVisible();\n    if (isVisible) {\n      isFocused.current = true;\n      handleShow();\n    }\n  };\n\n  let onBlur = () => {\n    isFocused.current = false;\n    isHovered.current = false;\n    handleHide(true);\n  };\n\n  let {hoverProps} = useHover({\n    isDisabled,\n    onHoverStart,\n    onHoverEnd\n  });\n\n  let {focusableProps} = useFocusable({\n    isDisabled,\n    onFocus,\n    onBlur\n  }, ref);\n\n  return {\n    triggerProps: {\n      'aria-describedby': state.isOpen ? tooltipId : undefined,\n      ...mergeProps(focusableProps, hoverProps, {\n        onPointerDown: onPressStart,\n        onKeyDown: onPressStart\n      })\n    },\n    tooltipProps: {\n      id: tooltipId\n    }\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AC4BO,SAAS,0CAAW,OAAyB,OAA2B;AAC7E,MAAI,YAAW,GAAA,2CAAe,OAAO;IAAC,WAAW;EAAI,CAAA;AAErD,MAAI,EAAA,WAAW,KAAI,GAAA,2CAAS;IAC1B,cAAc,MAAM,UAAA,QAAA,UAAA,SAAA,SAAA,MAAO,KAAK,IAAA;IAChC,YAAY,MAAM,UAAA,QAAA,UAAA,SAAA,SAAA,MAAO,MAAK;EAChC,CAAA;AAEA,SAAO;IACL,eAAc,GAAA,2CAAW,UAAU,YAAY;MAC7C,MAAM;IACR,CAAA;EACF;AACF;ACLO,SAAS,0CAAkB,OAA4B,OAA4B,KAAgC;AACxH,MAAI,EAAA,YACQ,QACH,IACL;AAEJ,MAAI,aAAY,GAAA,2CAAI;AAEpB,MAAI,aAAY,GAAA,aAAAA,QAAO,KAAA;AACvB,MAAI,aAAY,GAAA,aAAAA,QAAO,KAAA;AAEvB,MAAI,aAAa,MAAA;AACf,QAAI,UAAU,WAAW,UAAU;AACjC,YAAM,KAAK,UAAU,OAAO;EAEhC;AAEA,MAAI,aAAa,CAAC,cAAA;AAChB,QAAI,CAAC,UAAU,WAAW,CAAC,UAAU;AACnC,YAAM,MAAM,SAAA;EAEhB;AAEA,GAAA,GAAA,aAAAC,WAAU,MAAA;AACR,QAAI,YAAY,CAAC,MAAA;AACf,UAAI,OAAO,IAAI,SAGb;AAAA,YAAI,EAAE,QAAQ,UAAU;AACtB,YAAE,gBAAe;AACjB,gBAAM,MAAM,IAAA;QACd;MAAA;IAEJ;AACA,QAAI,MAAM,QAAQ;AAChB,eAAS,iBAAiB,WAAW,WAAW,IAAA;AAChD,aAAO,MAAA;AACL,iBAAS,oBAAoB,WAAW,WAAW,IAAA;MACrD;IACF;EACF,GAAG;IAAC;IAAK;GAAM;AAEf,MAAI,eAAe,MAAA;AACjB,QAAI,YAAY;AACd;AAMF,SAAI,GAAA,2CAAqB,MAAQ;AAC/B,gBAAU,UAAU;;AAEpB,gBAAU,UAAU;AAEtB,eAAA;EACF;AAEA,MAAI,aAAa,MAAA;AACf,QAAI,YAAY;AACd;AAGF,cAAU,UAAU;AACpB,cAAU,UAAU;AACpB,eAAA;EACF;AAEA,MAAI,eAAe,MAAA;AAEjB,cAAU,UAAU;AACpB,cAAU,UAAU;AACpB,eAAW,IAAA;EACb;AAEA,MAAI,UAAU,MAAA;AACZ,QAAI,aAAY,GAAA,2CAAa;AAC7B,QAAI,WAAW;AACb,gBAAU,UAAU;AACpB,iBAAA;IACF;EACF;AAEA,MAAI,SAAS,MAAA;AACX,cAAU,UAAU;AACpB,cAAU,UAAU;AACpB,eAAW,IAAA;EACb;AAEA,MAAI,EAAA,WAAW,KAAI,GAAA,2CAAS;;;;EAI5B,CAAA;AAEA,MAAI,EAAA,eAAe,KAAI,GAAA,2CAAa;;;;EAIpC,GAAG,GAAA;AAEH,SAAO;IACL,cAAc;MACZ,oBAAoB,MAAM,SAAS,YAAY;MAC/C,IAAG,GAAA,2CAAW,gBAAgB,YAAY;QACxC,eAAe;QACf,WAAW;MACb,CAAA;IACF;IACA,cAAc;MACZ,IAAI;IACN;EACF;AACF;",
  "names": ["$kgVYN$useRef", "$kgVYN$useEffect"]
}
